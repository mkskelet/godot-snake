[gd_scene load_steps=15 format=2]

[ext_resource path="res://apple.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "time"

[sub_resource type="VisualShaderNodeColorOp" id=7]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=8]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
function = 0

[sub_resource type="VisualShader" id=10]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_5;


void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(UV,0.0);

// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	vec4 tex_frg_5_read = texture( tex_frg_5 , n_out3p0.xy );
	n_out5p0 = tex_frg_5_read.rgb;
	n_out5p1 = tex_frg_5_read.a;

// Input:6
	float n_out6p0;
	n_out6p0 = TIME;

// ScalarOp:18
	float n_in18p1 = 2.00000;
	float n_out18p0;
	n_out18p0 = n_out6p0 * n_in18p1;

// ScalarFunc:9
	float n_out9p0;
	n_out9p0 = sin(n_out18p0);

// ScalarOp:11
	float n_in11p1 = 1.00000;
	float n_out11p0;
	n_out11p0 = n_out9p0 + n_in11p1;

// ScalarOp:13
	float n_in13p1 = 2.00000;
	float n_out13p0;
	n_out13p0 = n_out11p0 / n_in13p1;

// ScalarOp:10
	float n_in10p1 = 0.50000;
	float n_out10p0;
	n_out10p0 = max( n_out13p0 , n_in10p1 );

// VectorCompose:8
	vec3 n_out8p0;
	n_out8p0 = vec3( n_out10p0 , n_out10p0 , n_out10p0 );

// ColorOp:7
	vec3 n_out7p0;
	n_out7p0=min(vec3(n_out5p1),n_out8p0);

// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = dot(n_out7p0,vec3(0.333333,0.333333,0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -65.64, 157.25 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 880, 360 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -20, 380 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( 220, 320 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( -220, 360 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( 660, 480 )
nodes/fragment/8/node = SubResource( 8 )
nodes/fragment/8/position = Vector2( 460, 560 )
nodes/fragment/9/node = SubResource( 9 )
nodes/fragment/9/position = Vector2( -220, 560 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 280, 560 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -40, 560 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 120, 560 )
nodes/fragment/18/node = SubResource( 15 )
nodes/fragment/18/position = Vector2( -220, 440 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 8, 0, 7, 1, 10, 0, 8, 0, 10, 0, 8, 1, 10, 0, 8, 2, 9, 0, 11, 0, 11, 0, 13, 0, 13, 0, 10, 0, 5, 1, 7, 0, 7, 0, 0, 1, 5, 0, 0, 0, 6, 0, 18, 0, 18, 0, 9, 0 )

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )

[sub_resource type="RectangleShape2D" id=12]
extents = Vector2( 20, 20 )

[node name="Apple" type="Sprite"]
material = SubResource( 11 )
texture = ExtResource( 1 )
centered = false
region_enabled = true
region_rect = Rect2( 0, 0, 50, 50 )

[node name="StaticBody2D" type="StaticBody2D" parent="."]
collision_layer = 2
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( 25, 25 )
shape = SubResource( 12 )
